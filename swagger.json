{
  "swagger": "2.0",
  "info": {
    "title": "Social Blog API",
    "description": "API for a simple social network. You can post some publications and interact with publications of other users (put likes, write comments) and follow other users.\nFor most functionality(endpoints), you should create an account or log into an existing one.\nAfter authentication, you will receive two tokens (access, refresh). An access token is required to access certain routes. The access token is valid for no more than 30 minutes.\nTo renew the access token, use the refresh token (when renewing the access token, the refresh token also changes!). The refresh token is valid for no more than 30 days",
    "version": "1.0.0"
  },
  "host": "localhost:3001",
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "bearerAuth": {
      "name": "Authorization",
      "in": "header",
      "type": "apiKey",
      "description": "JWT Authorization header"
    }
  },
  "basePath": "/api",
  "paths": {
    "/register" : {
      "post": {
        "summary": "Endpoint to register for the app, creating new account",
        "description" : "",
        "parameters": [
          {
            "name": "User credentials",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example" : "User 1",
                  "min length": "5",
                  "max length": "32",
                  "required": true
                },
                "email": {
                  "type": "string",
                  "example" : "user1@gmail.com",
                  "required": true
                },
                "password": {
                  "type": "string",
                  "example" : "Secret Password",
                  "min length": "5",
                  "max length": "32",
                  "required": true
                }
              }
            }
          }
        ],
        "tags": [
          "Auth"
        ],
        "responses" : {
          "200" : {
            "description" : "Access and refresh tokens\nUser object's id that was created",
            "schema": {
              "type": "object",
              "properties" : {
                "accessToken": {
                  "$ref": "#/definitions/Token"
                },
                "refreshToken": {
                  "$ref": "#/definitions/Token"
                },
                "userId": {
                  "$ref": "#/definitions/ObjectId"
                }
              }
            }
          },
          "400" : {
            "description" : "Validation failed",
            "schema": {
              "type": "object",
              "properties" : {
                "message": {
                  "type": "string",
                  "example" : "Validation failed, username and password length must be at least 5 characters each"
                },
                "errors": {
                  "type": "array",
                  "example" : []
                }
              }
            }
          },
          "409" : {
            "description" : "User is already registered",
            "schema": {
              "type": "object",
              "properties" : {
                "message": {
                  "type": "string",
                  "example" : "User yevhenprudnik@gmail.com is already registered"
                },
                "errors": {
                  "type": "array",
                  "example" : []
                }
              }
            }
          }
        }
      }
    },
    "/signIn" : {
      "post": {
        "summary": "Endpoint to login to existing account",
        "description" : "Login to your account",
        "parameters": [
          {
            "name": "User credentials",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example" : "user1@gmail.com",
                  "required": true
                },
                "password": {
                  "type": "string",
                  "example" : "Secret Password",
                  "min length": "5",
                  "max length": "32",
                  "required": true
                }
              }
            }
          }
        ],
        "tags": [
          "Auth"
        ],
        "responses" : {
          "200" : {
            "description" : "Access and refresh tokens\nUser object's id",
            "schema": {
              "type": "object",
              "properties" : {
                "accessToken": {
                  "$ref": "#/definitions/Token"
                },
                "refreshToken": {
                  "$ref": "#/definitions/Token"
                },
                "userId": {
                  "$ref": "#/definitions/ObjectId"
                }
              }
            }
          },
          "400" : {
            "description" : "Wrong password",
            "schema": {
              "type": "object",
              "properties" : {
                "message": {
                  "type": "string",
                  "example" : "Wrong credentials"
                },
                "errors": {
                  "type": "array",
                  "example" : []
                }
              }
            }
          },
          "404" : {
            "description" : "Wrong email",
            "schema": {
              "type": "object",
              "properties" : {
                "message": {
                  "type": "string",
                  "example" : "User is not found"
                },
                "errors": {
                  "type": "array",
                  "example" : []
                }
              }
            }
          }
        }
      }
    },
    "/signOut": {
      "get": {
        "security": [ { "bearerAuth": [] } ],
        "summary": "Endpoint to logout from app via access token",
        "description": "",
        "tags": [
          "Auth"
        ],
        "responses": {
          "200" : {
            "description" : "Signed out status",
            "schema": {
              "type": "object",
              "properties" : {
                "signOut" : {
                  "type": "boolean",
                  "example" : "true"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is not valid",
            "schema" : {
              "$ref": "#/definitions/UnauthorizedError"
            }
          }
        }
      }
    },
    "/refresh": {
      "get": {
        "summary": "Endpoint to renew an access token via refresh token",
        "description": "",
        "tags": [
          "Auth"
        ],
        "responses" : {
          "200" : {
            "description" : "Access and refresh tokens\nUser object's id",
            "schema": {
              "type": "object",
              "properties" : {
                "accessToken": {
                  "$ref": "#/definitions/Token"
                },
                "refreshToken": {
                  "$ref": "#/definitions/Token"
                },
                "userId": {
                  "$ref": "#/definitions/ObjectId"
                }
              }
            }
          },
          "401" : {
            "description" : "Refresh token is not valid",
            "schema": {
              "$ref" : "#/definitions/UnauthorizedError"
            }
          }
        }
      }
    },
    "/check-auth": {
      "get": {
        "security": [ { "bearerAuth": [] } ],
        "summary": "Endpoint to get authorized via access token and ger additional data",
        "description": "",
        "tags": [
          "Auth"
        ],
        "responses": {
          "200" : {
            "description" : "User id from valid token, and additional data",
            "schema": {
              "type": "object",
              "properties" : {
                "userId": {
                  "$ref": "#/definitions/ObjectId"
                },
                "additionalData": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is not valid",
            "schema": {
              "$ref" : "#/definitions/UnauthorizedError"
            }
          }
        }
      }
    },
    "/posts": {
      "get": {
        "summary": "Endpoint to get posts/post list",
        "description": "Responses with array of all posts objects if id is not provided in query.\nIf id of user is provided, responses with array of user's posts.\nIf id of a specific post is provided, responses with one post object.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "example" : "62f3d91ac6ca216a5esd8197",
            "description": "An id of the post or an id of the user",
            "type": "string"
          }
        ],
        "tags": [
          "Posts"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Post"
              }
            }
          },
          "400": {
            "description" : "Invalid ObjectId",
            "schema" : { 
              "$ref" : "#/definitions/InvalidIdError"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "type": "object",
              "properties" : {
                "message": {
                  "type": "string",
                  "example" : "Post is not found"
                },
                "errors": {
                  "type": "array",
                  "example" : []
                }
              }
            }
          }
        }
      }
    },
    "/following-posts": {
      "post": {
        "security": [ { "bearerAuth": [] } ],
        "summary": "Endpoint to get posts/post list of the users you follow",
        "description": "",
        "parameters": [
          {
            "name": "following",
            "in": "body",
            "description": "An array of ids of users you follow",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "followingIdsArray": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example" : 
                  ["62f3d92ac6ca21665e1d8197", "62f3983c81a2499143ea91bf", "62f3a8qc8qa24a9143ea91bf"]
                }
              }
            }
          }
        ],
        "tags": [
          "Posts"
        ],
        "responses": {
          "200": {
            "description": "An array of posts of users you provided in array",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Post"
              }
            }
          },
          "401" : {
            "description" : "Access token is not valid",
            "schema": {
              "$ref" : "#/definitions/UnauthorizedError"
            }
          }
        }
      }
    },
    "/create-post" : {
      "post": {
        "security": [ { "bearerAuth": [] } ],
        "summary": "Endpoint to create a post",
        "description" : "",
        "parameters": [
          {
            "name": "Post content",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "example" : "Some amazing text",
                  "required": true
                }
              }
            }
          }
        ],
        "tags": [
          "Posts"
        ],
        "responses" : {
          "200" : {
            "description" : "Post object",
            "schema": {
              "$ref" : "#/definitions/Post"
            }
          },
          "400" : {
            "description" : "Text field is required",
            "schema": {
              "type": "object",
              "properties" : {
                "message": {
                  "type": "string",
                  "example" : "Post validation failed"
                },
                "errors": {
                  "type": "array",
                  "example" : []
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is not valid",
            "schema": {
              "$ref" : "#/definitions/UnauthorizedError"
            }
          }
        }
      }
    },
    "/edit-post" : {
      "post": {
        "security": [ { "bearerAuth": [] } ],
        "summary": "Endpoint to edit your post",
        "description" : "",
        "parameters": [
          {
            "name": "Post Id and new content",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "postId": {
                  "type": "string",
                  "example" : "62f3d92ac6ca21665e1d8197",
                  "required": true
                },
                "newText": {
                  "type": "string",
                  "example" : "Some amazing text(but better)",
                  "required": true
                }
              }
            }
          }
        ],
        "tags": [
          "Posts"
        ],
        "responses" : {
          "200" : {
            "description" : "Edited post object",
            "schema": {
              "$ref" : "#/definitions/Post"
            }
          },
          "400" : {
            "description" : "Post can be modified only by it's author",
            "schema": {
              "type": "object",
              "properties" : {
                "message": {
                  "type": "string",
                  "example" : "Post can be modified only by it's author"
                },
                "errors": {
                  "type": "array",
                  "example" : []
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is not valid",
            "schema" : {
              "$ref" : "#/definitions/UnauthorizedError"
            }
          }
        }
      }
    },
    "/like-post" : {
      "post": {
        "security": [ { "bearerAuth": [] } ],
        "summary": "Endpoint to like someone's post",
        "description" : "",
        "parameters": [
          {
            "name": "Post Id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "postId": {
                  "type": "string",
                  "example" : "62f3d92ac6ca21665e1d8197",
                  "required": true
                }
              }
            }
          }
        ],
        "tags": [
          "Posts"
        ],
        "responses" : {
          "200" : {
            "description" : "Post object",
            "schema": {
              "$ref" : "#/definitions/Post"
            }
          },
          "401" : {
            "description" : "Access token is not valid",
            "schema": {
              "$ref" : "#/definitions/UnauthorizedError"
            }
          },
          "404" : {
            "description" : "Post is not found",
            "schema" : {
              "type": "object",
              "properties" : {
                "message": {
                  "type": "string",
                  "example" : "Post is not found"
                },
                "errors": {
                  "type": "array",
                  "example" : []
                }
              }
            }
          }
        }
      }
    },
    "/comment-post" : {
      "post": {
        "security": [ { "bearerAuth": [] } ],
        "summary": "Endpoint to comment someone's post",
        "description" : "",
        "parameters": [
          {
            "name": "Post Id and comment",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "postId": {
                  "type": "string",
                  "example" : "62f3d92ac6ca21665e1d8197",
                  "required": true
                },
                "comment": {
                  "type": "string",
                  "example" : "Some amazing comment",
                  "required": true
                }
              }
            }
          }
        ],
        "tags": [
          "Posts"
        ],
        "responses" : {
          "200" : {
            "description" : "Post object",
            "schema" : {
              "$ref" : "#/definitions/Post"
            }
          },
          "401" : {
            "description" : "Access token is not valid",
            "schema": {
              "$ref" : "#/definitions/UnauthorizedError"
            }
          },
          "404" : {
            "description" : "Post is not found",
            "schema" : {
              "type": "object",
              "properties" : {
                "message": {
                  "type": "string",
                  "example" : "Post is not found"
                },
                "errors": {
                  "type": "array",
                  "example" : []
                }
              }
            }
          }
        }
      }
    },
    "/delete-post" : {
      "delete": {
        "security": [ { "bearerAuth": [] } ],
        "summary": "Endpoint to delete your post",
        "description" : "",
        "parameters": [
          {
            "name": "Post Id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "postId": {
                  "type": "string",
                  "example" : "62f3d92ac6ca21665e1d8197",
                  "required": true
                }
              }
            }
          }
        ],
        "tags": [
          "Posts"
        ],
        "responses" : {
          "200" : {
            "description" : "Deleted boolean",
            "schema" : {
              "type" : "object",
              "properties" : {
                "deleted": {
                  "type" : "boolean",
                  "example" : "true"
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is not valid",
            "schema": {
              "$ref" : "#/definitions/UnauthorizedError"
            }
          },
          "404" : {
            "description" : "Post is not found",
            "schema" : {
              "type": "object",
              "properties" : {
                "message": {
                  "type": "string",
                  "example" : "Post is not found"
                },
                "errors": {
                  "type": "array",
                  "example" : []
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "summary": "Endpoint to get information about the user",
        "description": "User object",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "example" : "62f3d92ac6ca21665e1d8197",
            "description": "An id of the user",
            "type": "string"
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "User data",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "404" : {
            "description" : "User is not found",
            "schema": {
              "type": "object",
              "properties" : {
                "message": {
                  "type": "string",
                  "example" : "User is not found"
                },
                "errors": {
                  "type": "array",
                  "example" : []
                }
              }
            }
          }
        }
      }
    },
    "/confirm-email/{link}": {
      "get": {
        "summary": "Endpoint to confirm your email",
        "description": "",
        "parameters": [
          {
            "name": "link",
            "in": "path",
            "description": "randomly generated during registration string ",
            "example" : "18868049-1368-45d3-8756-647fc91282b3",
            "type": "string"
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Single string 'confirmed'",
            "schema" : {
              "type": "string",
              "example" : "confirmed"
            }
          },
          "400": {
            "description": "Invalid activation link",
            "schema" : {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid activation link"
                },
                "errors": {
                  "type": "array",
                  "example": []
                }
              }
            }
          }
        }
      }
    },
    "/follow" : {
      "post": {
        "security": [ { "bearerAuth": [] } ],
        "summary": "Endpoint to follow the user",
        "description" : "",
        "parameters": [
          {
            "name": "Id of user you want to follow",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userToFollow": {
                  "type": "string",
                  "example" : "62f3d91ac6ca216a5esd8197",
                  "required": true
                }
              }
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "responses" : {
          "200" : {
            "description" : "An array of users' ids that user follows",
            "schema" : {
              "type" : "array",
              "example": ["62f3d91ac6ca216a5esd8197", "62f243e582dd47ba5d379f02", "62f3983c81a2499143ea91bs"]
            }
          },
          "400" : {
            "description" : "User is trying to follow a user that is already in his following",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "You are already following this user"
                },
                "errors" : {
                  "type" : "array",
                  "example" : []
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is not valid",
            "schema" : {
              "$ref" : "#/definitions/UnauthorizedError"
            }
          },
          "404" : {
            "description" : "User is not found",
            "schema": {
              "type": "object",
              "properties" : {
                "message": {
                  "type": "string",
                  "example" : "User is not found"
                },
                "errors": {
                  "type": "array",
                  "example" : []
                }
              }
            }
          }
        }
      }
    },
    "/unfollow" : {
      "post": {
        "security": [ { "bearerAuth": [] } ],
        "summary": "Endpoint to unfollow the user",
        "description" : "",
        "parameters": [
          {
            "name": "Id of user you want to unfollow",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userToUnfollow": {
                  "type": "string",
                  "example" : "62f3d91ac6ca216a5esd8197",
                  "required": true
                }
              }
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "responses" : {
          "200" : {
            "description" : "An array of users' ids that user follows",
            "schema" : {
              "type" : "array",
              "example": ["62f3d91ac6ca216a5esd8197", "62f243e582dd47ba5d379f02", "62f3983c81a2499143ea91bs"]
            }
          },
          "400" : {
            "description" : "User is trying to unfollow a user he is not following",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "example" : "You are not following this user"
                },
                "errors" : {
                  "type" : "array",
                  "example" : []
                }
              }
            }
          },
          "401" : {
            "description" : "Access token is not valid",
            "schema" : {
              "$ref" : "#/definitions/UnauthorizedError"
            }
          },
          "404" : {
            "description" : "User is not found",
            "schema": {
              "type": "object",
              "properties" : {
                "message": {
                  "type": "string",
                  "example" : "User is not found"
                },
                "errors": {
                  "type": "array",
                  "example" : []
                }
              }
            }
          }
        }
      }
    },
    "/change-avatar" : {
      "post": {
        "security": [ { "bearerAuth": [] } ],
        "summary": "Endpoint to change your profile image",
        "description" : "",
        "parameters": [
          {
            "name": "new avatar",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "newAvatar": {
                  "type": "string",
                  "example" : "http://tachyons.io/img/avatar_1.jpg",
                  "required": true
                }
              }
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "responses" : {
          "200" : {
            "description" : "New avatar",
            "schema" : {
              "type" : "string",
              "example" : "http://tachyons.io/img/avatar_1.jpg"
            }
          },
          "401" : {
            "description" : "Access token is not valid",
            "schema" : {
              "$ref" : "#/definitions/UnauthorizedError"
            }
          },
          "404" : {
            "description" : "User is not found",
            "schema": {
              "type": "object",
              "properties" : {
                "message": {
                  "type": "string",
                  "example" : "User is not found"
                },
                "errors": {
                  "type": "array",
                  "example" : []
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User" : {
      "description" : "User object",
      "type": "object",
      "properties": {
        "_id" : {
          "$ref": "#/definitions/ObjectId"
        },
        "username": {
          "type": "string",
          "example": "Yevhen"
        },
        "email": {
          "type": "string",
          "example": "yevhen@gmail.com"
        },
        "avatar": {
          "type": "string",
          "example": "http://tachyons.io/img/avatar_1.jpg"
        },
        "memberSince": {
          "type": "date",
          "example" : "2022-08-11T06:19:53.226+00:00"
        },
        "confirmedEmail": {
          "type": "boolean",
          "example": false
        },
        "following": {
          "type": "array",
          "items" : {
            "$ref" : "#/definitions/ObjectId"
          }
        },
        "followers": {
          "type": "array",
          "items" : {
            "$ref" : "#/definitions/ObjectId"
          }
        }
      }
    },
    "Post":{
      "description": "Post object",
      "type" : "object",
      "properties": {
        "_id": {
          "$ref": "#/definitions/ObjectId"
        },
        "postedBy": {
          "type" : "object",
          "properties" : {
            "_id": {
              "$ref": "#/definitions/ObjectId"
            },
            "username": {
              "type": "string",
              "example" : "Yevhen"
            }
          }
        },
        "text": {
          "type": "string",
          "example" : "Post content example"
        },
        "likedBy": {
          "type": "array",
          "items" : {
            "$ref": "#/definitions/ObjectId"
          }
        },
        "date" : {
          "type": "date",
          "example" : "2022-08-11T06:19:53.226+00:00"
        },
        "comments": {
          "type": "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "writtenBy": {
                "type" : "object",
                "properties" : {
                  "_id" : {
                    "$ref": "#/definitions/ObjectId"
                  }, 
                  "username" : {
                    "type" : "string",
                    "example" : "Yevhen"
                  }
                }
              },
              "comment": {
                "type": "string",
                "example" : "Some amazing comment"
              }, 
              "_id" : {
                "$ref": "#/definitions/ObjectId"
              }
            }
          }
        }
      }
    },
    "ObjectId" : {
      "description": "Object id from database",
      "type": "string",
      "example" : "62f3d39b345f9a03a827a562"
    },
    "Token" : {
      "description": "String that represents hashed information about the specific user",
      "type": "string",
      "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IllldmhlbiIsImVtYWlsIjoieWV2aGVucHJ1ZG5pa0BnbWFpbC5jb20iLCJpZCI6IjYyZjI0M2U1ODJkZDQ3YmE1ZDM3OWYwMSIsImlhdCI6MTY2MDIxMTk2MCwiZXhwIjoxNjYwMjEzNzYwfQ.XVGBvCXBgrAcOG_HQBxeK9YaBvL22xfHoxBsNFM0wpI"
    },
    "UnauthorizedError": {
      "description" : "Access token is not valid",
      "type" : "object",
      "properties" : {
        "message" : {
          "type" : "string",
          "example": "Unauthorized user"
        },
        "errors" : {
          "type" : "array",
          "example" : []
        }
      }
    },
    "InvalidIdError" : {
      "description" : "Object is not a valid",
      "type" : "object",
      "properties" : {
        "message" : {
          "type" : "string",
          "example": "Invalid Id"
        },
        "errors" : {
          "type" : "array",
          "example" : []
        }
      }
    }
  }
}